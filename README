This is a proof of concept of a status handler for workflows:

Set up:
1. Install Temporal cli. Run `make install-temporal-cli`
2. Open a shell and start the Temporal cluster by running: `make start-temporal-cluster`. \
The frontend is available at http://localhost:7233 and the UI at http://localhost:8233.

Retry example:
1. In a new shell run `make start-worker` to start the worker (activity and workflows)
2. In a new shell start a workflow by running `make run-greet-workflow`
3. Access the UI at http://localhost:8233. You should see the workflow running and if you access it, you will see that the GreetingActivity failed.
4. Send a signal called `retry` (without a body) and see the GreetingActivity runs again (and fails again)
5. Go to the activity implementation and make it return nil (no error)
6. Kill the worker (CTRL+C) and start it again
7. Send a `retry` signal to the workflow
8. See that the WF has run the GreetingActivity again (this time successfully) and it has completed.

Manually-executed example:
1. In a new shell run `make start-worker` to start the worker
2. In a new shell start a workflow by running `make run-greet-workflow-with-output`
3. Access the UI. You should see the workflow running and if you access it, you will see that the GreetActivityWithOutput failed.
4. Send a signal called `manually-executed` with body `"{\n   \"greeting\":\"Hey you!\"\n}"`
5. See that the WF has completed and that the output is `"Hey you!"`